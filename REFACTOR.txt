SOl needs to be refactored. RIght now everything lives in main.py

to refactor, I want a set of modules / files like

Parsing -> Interpret + Stdlib
So 3 big modules, parsing, interpret, stdlib

I want to reduce all the imperative code where possible. For example there are tons of really bad imperative code that uses
while loops and hanging if statements and stuff

There are also classes with static methods and big classes in general. These can be simplified into simple data classes + pure functions
for the most part

I want to use toolz and functools to refactor much of the imperative logic into functional logic.
Including compose, partial applications, and so on

I also want to modify the existing function implementations of the std library to use builtin python libs like gitpython and socket for ping. And python-nmap for nmap